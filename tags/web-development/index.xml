<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Development on Blowfish</title><link>https://localhost:1313/tags/web-development/</link><description>Recent content in Web Development on Blowfish</description><generator>Hugo</generator><language>en</language><managingEditor>nuno@n9o.xyz (Blowfish)</managingEditor><webMaster>nuno@n9o.xyz (Blowfish)</webMaster><lastBuildDate>Thu, 20 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://localhost:1313/tags/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring Possibilities with CSS: A Comprehensive Guide to Advanced CSS Coding</title><link>https://localhost:1313/dsblog/Exploring-Possibilities-with-CSS/</link><pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/Exploring-Possibilities-with-CSS/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6223-Exploring-Possibilities-with-CSS.jpg" alt="Exploring Possibilities with CSS: A Comprehensive Guide to Advanced CSS Coding">&lt;/p>
&lt;h1 id="exploring-advance-css-coding">Exploring Advance CSS Coding&lt;a class="td-heading-self-link" href="#exploring-advance-css-coding" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>HTML give the structure to any website, it is like bone strucutre of the body. But the CSS makes it colorful, give some life imitation ability and make it beautiful, it is like flesh and skin on the bone which makes body alive and beautiful. This tutorial should give you a solid foundation in advanced CSS techniques. Keep practicing, with AI driven coding tools you need not memorize the syntext but you should understand what is possible so that you can imagine how you can use it for you project.&lt;/p></description></item><item><title>curl Commands</title><link>https://localhost:1313/dsblog/curl-commands/</link><pubDate>Sun, 29 Dec 2024 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/curl-commands/</guid><description>&lt;p>!&lt;img src="https://localhost:1313/assets/images/dspost/dsp6195-curl-commands.jpg" alt="curl Commands">&lt;/p>
&lt;h2 id="what-is-curl-command">What is curl command?&lt;a class="td-heading-self-link" href="#what-is-curl-command" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>The &lt;code>curl&lt;/code> command is a versatile command-line tool for transferring data to and from servers using various protocols like HTTP, HTTPS, FTP, etc. It allows you to make requests (GET, POST, PUT, DELETE) to APIs, download/upload files, send data, and debug web interactions directly from the terminal. It supports custom headers, authentication, proxies, and more, making it essential for testing and automation in web development and API integrations.&lt;/p></description></item><item><title>Navigating Python Ecosystem</title><link>https://localhost:1313/dsblog/Navigating-Python-Ecosystem/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/Navigating-Python-Ecosystem/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6178-Navigating-Python-Ecosystem.jpg" alt="Navigating Python Ecosystem">&lt;/p>
&lt;h1 id="navigating-python-ecosystem">Navigating Python Ecosystem&lt;a class="td-heading-self-link" href="#navigating-python-ecosystem" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="1-history-of-python-development">1. &lt;strong>History of Python Development&lt;/strong>&lt;a class="td-heading-self-link" href="#1-history-of-python-development" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Python was created by &lt;strong>Guido van Rossum&lt;/strong> and was first released in 1991. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code compared to other languages like C++ or Java. Significant milestones in Python’s development include:&lt;/p></description></item><item><title>Processors for HTML CSS JS Code</title><link>https://localhost:1313/dsblog/Processors-for-HTML-CSS-JS-Code/</link><pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/Processors-for-HTML-CSS-JS-Code/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6177-Processors-for-HTML-CSS-JS-Code.jpg" alt="Processors for HTML CSS JS Code">&lt;/p>
&lt;h1 id="processors-for-html-css-and-js-code">Processors for HTML, CSS, and JS Code&lt;a class="td-heading-self-link" href="#processors-for-html-css-and-js-code" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="what-are-html-processors">What are HTML Processors?&lt;a class="td-heading-self-link" href="#what-are-html-processors" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>HTML processors (or preprocessors) extend HTML functionality by adding new features like templating, reusable components, loops, conditionals, and more. They simplify development by generating standard HTML with enhanced capabilities. Below are some of the most popular HTML processors and what they do:&lt;/p></description></item><item><title>Exploring Popular Web Server</title><link>https://localhost:1313/dsblog/Exploring-Popular-Web-Server/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/Exploring-Popular-Web-Server/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6176-Exploring-Popular-Web-Server.jpg" alt="Exploring Popular Web Server">&lt;/p>
&lt;h1 id="exploring-popular-web-server">Exploring Popular Web Server&lt;a class="td-heading-self-link" href="#exploring-popular-web-server" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="what-is-webserver">What is Webserver?&lt;a class="td-heading-self-link" href="#what-is-webserver" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>A &lt;strong>web server&lt;/strong> is software or hardware that serves web content to users over the internet. It hosts, processes, and delivers web pages to clients, typically web browsers, when users request a website by entering its URL. Here’s a breakdown of what a web server does and its components:&lt;/p></description></item><item><title>REST API</title><link>https://localhost:1313/dsblog/REST-API/</link><pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/REST-API/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6121-REST-API.jpg" alt="REST-API">&lt;/p>
&lt;h1 id="rest-api">REST API&lt;a class="td-heading-self-link" href="#rest-api" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>An API (Application Programming Interface) is a set of rules and protocols that allows one software application to interact with another. It defines the methods and data formats that applications can use to communicate with each other, enabling them to request and exchange information.&lt;/p></description></item><item><title>What is CAPTCHA?</title><link>https://localhost:1313/dsblog/What-is-Captcha/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><author>nuno@n9o.xyz (Blowfish)</author><guid>https://localhost:1313/dsblog/What-is-Captcha/</guid><description>&lt;p>&lt;img src="https://localhost:1313/assets/images/dspost/dsp6070-What-is-Captcha.jpg" alt="What is CAPTCHA?">&lt;/p>
&lt;h1 id="what-is-captcha">What is CAPTCHA?&lt;a class="td-heading-self-link" href="#what-is-captcha" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>CAPTCHA stands for &amp;ldquo;Completely Automated Public Turing test to tell Computers and Humans Apart.&amp;rdquo; It is a security mechanism used by websites to determine whether the user is a human or a computer program (bot). CAPTCHAs are typically implemented as tests or challenges presented to the user, which are easy for humans to solve but difficult for bots.&lt;/p></description></item></channel></rss>